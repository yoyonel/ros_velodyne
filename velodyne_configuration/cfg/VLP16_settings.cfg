#!/usr/bin/env python
from dynamic_reconfigure.parameter_generator_catkin import *

PACKAGE = "velodyne_configuration"

gen = ParameterGenerator()

# $ curl -s http://192.168.1.201/cgi/settings.json
# {"laser":"Off",
#  "returns":"Strongest",
#  "rpm":0,
#  "fov":{"start":0,"end":359},
#  "phaselock":{"enabled":"Off","offset":"0"},
#  "host":{"addr":"192.168.1.179","dport":"2368","tport":"8308"},
#  "net":{"addr":"192.168.1.201","mask":"255.255.255.0","gateway":"192.168.1.1","dhcp":"Off"}
# }
gen.add("laser_state", bool_t, 0, "Laser state", True)

return_type_enum = gen.enum([   gen.const("Strongest", int_t, 0, "Strongest return type"),
                                gen.const("Last",      int_t, 1, "Last return type"),
                                gen.const("Dual",      int_t, 2, "Dual return type")],
                            "An enum to set Return Type")
gen.add("return_type", int_t, 0, "Return Type", 0, 0, 2, edit_method=return_type_enum)

max_motor_rpm = 600
gen.add("rpm", int_t, 0, "Motor RPM", 0, 0, max_motor_rpm)

gen.add("fov_start", int_t, 0, "FOV Start", 0, 0, 359)
gen.add("fov_end", int_t, 0, "FOV End", 359, 0, 359)

gen.add("phaselock_state", bool_t, 0, "Phase Lock", False)
gen.add("phaselock_offset", int_t, 0, "Phase Offset", 0, 0, 359)

gen.add("host_addr",    str_t,  0, "Host (Destination) IP",             "255.255.255.255")
gen.add("host_dport",   str_t,  0, "Host (Destination) Data Port",      "2368")
gen.add("host_tport",   str_t,  0, "Host (Destination) Telemetry Port", "8308")

gen.add("net_addr",     str_t,  0, "Network (Sensor) IP",       "192.168.1.201")
gen.add("net_mask",     str_t,  0, "Network (Sensor) Mask",     "255.255.255.0")
gen.add("net_gateway",  str_t,  0, "Network (Sensor) Gateway",  "192.168.1.1")
gen.add("net_dhcp",     bool_t, 0, "Network (Sensor) DHCP",     False)

exit(gen.generate(PACKAGE, "velodyne_configuration", "VLP16_settings"))
